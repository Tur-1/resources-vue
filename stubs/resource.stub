import { BaseResource } from '@tur1/resources-vue'
import use{{pageName}}Api from '@/pages/{{pageName}}/api/use{{pageName}}Api'
import DeleteAction from '@/pages/{{pageName}}/Actions/DeleteAction'
import Filter from '@/pages/{{pageName}}/Filters/Filter'

class {{pageName}} extends BaseResource {
  /**
   * The title of the page.
   * @type {string}
   */
  title = '{{pageName}}';

  /**
   * Enable or disable simple pagination. 
   * @type {Boolean}
   */
  simplePagination = true;

  /**
   * The query key used for pagination in URL parameters.
   * @type {string}
   */
  paginationQueryKey = 'page';

  /**
   * The display style for the layout.
   * Can be 'grid' or 'table'.
   *
   * @type {string}
   * @default 'table'
   */
  display = "table";

  /**
   * display the label for each column. 
   * 
   * @type {Boolean}
   * @default false
   */
  displayLabel = false;

  /**
   * Searchable status of the resource.
   * @type {boolean}
   */
  searchable = true;

  /**
   * Placeholder for the search input.
   * @type {string}
   */
  searchPlaceholder = 'search';

  /**
   * Get the data for the resource.
   */
  async data() {
    let response = await use{{pageName}}Api.getPaginatedList()

    return {
      data: response.data.data,
      links:response.data.links,
      meta:response.data.meta
    }
  }

  /**
   * Get the fields for the resource.  
   */
  fields() {
    return []
  }

  /**
   * Get the pages for the resource. 
   */
  pages() {
    return {
      {
        routeName: '{{snakeCasePageName}}.show',
        routeParam: 'id', 
        label: 'Show',
        icon: 'fa-solid fa-eye',
        class: 'text-primary'
      },
      {
        routeName: '{{snakeCasePageName}}.edit',
        routeParam: 'id', 
        label: 'Edit',
        icon: 'fa-solid fa-pen-to-square',
        class: 'text-primary'
      },
    };
  }

 /**
 * Get the header actions for the resource.
 *
 */
  headerActions() {
    return [
      {
        routeName: '{{snakeCasePageName}}.create',
        icon: 'fa-solid fa-plus',
        label: 'create {{singularPageName}}'
      }
    ];
  }

  /**
   * Get the filters for the resource. 
   */
  filters() {
    return [new Filter()];
  }

  /**
   * Get the actions for the resource.
   */
  actions() {
    return [new DeleteAction()];
  }

}

export default {{pageName}};